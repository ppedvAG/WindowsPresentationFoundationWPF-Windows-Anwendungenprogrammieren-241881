<Window x:Class="M007.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:M007"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="MainWindow" Height="450" Width="300"
		WindowStartupLocation="CenterScreen"
		Topmost="True">
	<Window.Resources>
		<local:AlignmentConverter x:Key="AC"/>

		<DataTemplate DataType="{x:Type sys:Int32}">
			<TextBlock Text="{Binding .}" FontSize="{Binding .}"/>
		</DataTemplate>
	</Window.Resources>
	<StackPanel>
		<!--Templates-->
		<!--Zwei verschiedene Arten: ControlTemplate, DataTemplate-->

		<!--ControlTemplate-->
		<!--Komponente von Grund auf neu designen-->
		<!--z.B. Runde Ecken bei einem Button-->
		<!--WICHTIG: TargetType angeben-->
		<Button Content="Hallo"
				Click="Button_Click"
				HorizontalContentAlignment="Center">
			<Button.Template>
				<ControlTemplate TargetType="Button">
					<Border BorderThickness="3" BorderBrush="Aqua" CornerRadius="10">
						<!--TextBlock soll den Inhalt des Buttons empfangen-->
						<!--Dafür wird ein TemplateBinding benötigt-->
						<!--Ziehe den Inhalt von Content heraus-->
						<TextBlock Text="{TemplateBinding Content}"
								   TextAlignment="{TemplateBinding HorizontalContentAlignment, Converter={StaticResource AC}}"/>
					</Border>
				</ControlTemplate>
			</Button.Template>
		</Button>


		<!--DataTemplate-->
		<!--Daten visuell beliebig darstellen-->
		<!--Vorallem in Listenkomponenten um Objekte sinnvoll darzustellen-->
		
		<!--Ohne Template wird hier eine Stringrepräsentation des Objekts erstellt (ToString())-->
		<ComboBox ItemsSource="{Binding Personen}"/>

		<ComboBox ItemsSource="{Binding Personen}">
			<!--ItemTemplate: Bestimmt wie jedes einzelne Element aussehen soll-->
			<ComboBox.ItemTemplate>
				<!--WICHTIG: DataType nicht vergessen-->
				<DataTemplate DataType="local:Person">
					<StackPanel Orientation="Horizontal">
						<Border BorderBrush="Black" Background="LightGreen" BorderThickness="1" Width="20" Height="20" Margin="0 0 5 0">
							<TextBlock Text="{Binding ID}" VerticalAlignment="Center" TextAlignment="Center" Margin="3"/>  <!--Normales Binding um auf einzelne Werte zuzugreifen-->
						</Border>
						<TextBlock Text="{Binding Vorname}" VerticalAlignment="Center" Margin="0 0 5 0"/>
						<TextBlock Text="{Binding Nachname}" VerticalAlignment="Center"/>
						<Button Content="Person löschen" HorizontalAlignment="Right" Click="Button_Click_1"/>
					</StackPanel>
				</DataTemplate>
			</ComboBox.ItemTemplate>
		</ComboBox>
			
			
		<!--ItemsPanelTemplate-->
		<!--Innerhalb von einer Listenkomponente den Container bearbeiten-->
		<!--ComboBox: StackPanel-->
		<ListBox ItemsSource="{Binding Personen}">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<UniformGrid Columns="5"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<ListBox.ItemTemplate>
				<DataTemplate DataType="local:Person">
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="{Binding Vorname}" Margin="0 0 5 0"/>
						<TextBlock Text="{Binding Nachname}"/>
					</StackPanel>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
			
		
		<!--Globale Templates-->
		<!--Templates ohne Key sind global (wie bei Styles)-->
		<!--Wenn es Daten von dem gegebenen Typen gibt, werden diese das entsprechende Template bekommen-->
		<!--<ListBox ItemsSource="{Binding Zahlen}">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<UniformGrid Rows="5"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>
		</ListBox>
		<ComboBox ItemsSource="{Binding Zahlen}"/>-->
		
		
		<!--Beispiel-->
		<!--WICHTIG: Bei globalen Templates immer x:Type benutzen-->
		<StackPanel>
			<StackPanel.Resources>
				<DataTemplate DataType="{x:Type local:TextSetting}">
					<UniformGrid Columns="2">
						<TextBlock Text="{Binding Path=Name}"/>
						<TextBox Text="{Binding Path=Value}"/>
					</UniformGrid>
				</DataTemplate>
				<DataTemplate DataType="{x:Type local:BooleanSetting}">
					<UniformGrid Columns="2">
						<TextBlock Text="{Binding Path=Name}"/>
						<CheckBox IsChecked="{Binding Path=Value}"/>
					</UniformGrid>
				</DataTemplate>
				<DataTemplate DataType="{x:Type local:IntegerSetting}">
					<UniformGrid Columns="2">
						<TextBlock Text="{Binding Path=Name}"/>
						<Slider Maximum="200" Value="{Binding Value}"/>
					</UniformGrid>
				</DataTemplate>
			</StackPanel.Resources>
			
			<ListBox ItemsSource="{Binding SettingsFile}"
					 HorizontalContentAlignment="Stretch"/>
		</StackPanel>
	</StackPanel>
</Window>